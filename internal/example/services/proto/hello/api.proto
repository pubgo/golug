syntax = "proto3";

package hello;

import "proto/hello/api1.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./;hello";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/gogo/grpc-example";
    description: "gRPC example repository";
  }
  schemes: HTTPS;
};

// TestApi service
service TestApi {
  // Version rpc
  rpc Version(hello.TestReq) returns (hello.TestApiOutput) {
    option (google.api.http) = {
      get: "/v1/version"
    };
  }

  rpc Version1(google.protobuf.Value) returns (TestApiOutput1) {
    option (google.api.http) = {
      post: "/v1/version1"
      body: "*"
    };
  }

  // VersionTest rpc
  rpc VersionTest(hello.TestReq) returns (hello.TestApiOutput) {
    option (google.api.http) = {
      get: "/v1/example/versiontest"
    };
  }

  // VersionTest rpc custom
  rpc VersionTestCustom(hello.TestReq) returns (hello.TestApiOutput) {
    option (google.api.http) = {
      get: "/v1/example/versionTestCustom"
    };
  }
}

service TestApiV2 {
  rpc Version1(hello.TestReq) returns (hello.TestApiOutput) {
    option (google.api.http) = {
      post: "/v2/example/version/{name}"
      body: "*"
    };
  }

  rpc VersionTest1(hello.TestReq) returns (hello.TestApiOutput) {
    option (google.api.http) = {
      post: "/v2/example/versiontest"
      body: "*"
    };
  }
}


message TestApiOutput1 {
  google.protobuf.Value data = 1;
  string abc = 2;
}
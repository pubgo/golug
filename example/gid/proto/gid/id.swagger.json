{
  "swagger": "2.0",
  "info": {
    "title": "proto/gid/id.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "Id"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/id/generate": {
      "post": {
        "operationId": "Id_Generate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gidGenerateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gidGenerateRequest"
            }
          }
        ],
        "tags": [
          "Id"
        ]
      }
    },
    "/v1/id/types": {
      "get": {
        "operationId": "Id_Types",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gidTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Id"
        ]
      }
    }
  },
  "definitions": {
    "gidGenerateRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type of id e.g uuid, shortid, snowflake (64 bit), bigflake (128 bit)"
        }
      },
      "description": "Generate a unique ID. Defaults to uuid."
    },
    "gidGenerateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the unique id generated"
        },
        "type": {
          "type": "string",
          "title": "the type of id generated"
        }
      }
    },
    "gidTypesResponse": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "gRPC example repository",
    "url": "https://github.com/gogo/grpc-example"
  }
}

// Code generated by protoc-gen-lava. DO NOT EDIT.
// versions:
// - protoc-gen-lava v0.1.0
// - protoc         v3.17.3
// source: proto/yuque_pb/yuque.proto

package yuque_pb

import (
	context "context"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpcc "github.com/pubgo/lava/clients/grpcc"
	xgen "github.com/pubgo/lava/xgen"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

func GetYuqueClient(srv string, opts ...func(cfg *grpcc.Cfg)) YuqueClient {
	return &yuqueClient{grpcc.GetClient(srv, opts...)}
}
func init() {
	var mthList []xgen.GrpcRestHandler
	mthList = append(mthList, xgen.GrpcRestHandler{
		Input:        &emptypb.Empty{},
		Output:       &UserInfoResp{},
		Service:      "yuque.v2.Yuque",
		Name:         "UserInfo",
		Method:       "GET",
		Path:         "/user",
		DefaultUrl:   false,
		ClientStream: false,
		ServerStream: false,
	})
	mthList = append(mthList, xgen.GrpcRestHandler{
		Input:        &UserInfoReq{},
		Output:       &UserInfoResp{},
		Service:      "yuque.v2.Yuque",
		Name:         "UserInfoByLogin",
		Method:       "GET",
		Path:         "/users/{login}",
		DefaultUrl:   false,
		ClientStream: false,
		ServerStream: false,
	})
	mthList = append(mthList, xgen.GrpcRestHandler{
		Input:        &CreateGroupReq{},
		Output:       &CreateGroupResp{},
		Service:      "yuque.v2.Yuque",
		Name:         "CreateGroup",
		Method:       "POST",
		Path:         "/groups",
		DefaultUrl:   false,
		ClientStream: false,
		ServerStream: false,
	})
	xgen.Add(RegisterYuqueServer, mthList)
	var registerYuqueGrpcClient = func(ctx context.Context, mux *runtime.ServeMux, conn grpc.ClientConnInterface) error {
		return RegisterYuqueHandlerClient(ctx, mux, NewYuqueClient(conn))
	}
	xgen.Add(registerYuqueGrpcClient, nil)
}

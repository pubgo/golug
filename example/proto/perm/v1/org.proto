syntax = "proto3";

package perm.v1;

option go_package = "./permpb;permpb";

// org grpc service, OrgSrv provides org info inside RBAC instead of global
service OrgService {
  // CreateOrg init org, create org role and bind all function permissions, the method is idempotent
  // {org_id} is required
  // when {user_id} is set, {user_id} will be admin
  rpc CreateOrg (CreateOrgRequest) returns (CreateOrgResponse) {}

  // delete org all perms and data
  // {org_id} is required
  rpc DeleteOrg (DeleteOrgRequest) returns (DeleteOrgResponse) {}

  // transfer org admin to {new_user_id}, then {user_id} will only lose the admin role, and other roles will be retained
  // all parameters are required
  rpc TransferOrg (TransferOrgRequest) returns (TransferOrgResponse) {}

  // list all org
  rpc ListOrg (ListOrgRequest) returns (ListOrgResponse) {}
}

message ListOrgRequest{
}

message DeleteOrgRequest{
  string org_id = 1;
}

message DeleteOrgResponse{}

message CreateOrgRequest{
  string org_id = 1;
  string user_id = 2;
}

message CreateOrgResponse{}



message TransferOrgResponse{}

message TransferOrgRequest{
  string org_id = 1;
  string user_id = 2;
  string new_user_id = 3;
}

message ListOrgResponse{
  repeated string orgs = 1;
}

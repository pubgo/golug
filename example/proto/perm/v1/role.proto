syntax = "proto3";

package perm.v1;

option go_package = "./permpb;permpb";

// role grpc service, RoleService provides role management and user role management
service RoleService {
  // create role
  rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse) {};

  /**
  - delete role by id or name
      - req: id=12
      - req: name=admin,org_id=ka
   */
  rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse) {}

  /**
  - update role by id or name
      - req: id=12
      - req: name=admin,org_id=ka
   */
  rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse) {}

  // get role by id
  rpc GetRole (GetRoleRequest) returns (GetRoleResponse) {}

  // list role by org_id
  rpc ListRoles (ListRolesRequest) returns (ListRolesResponse) {}

  // add role to user
  // all parameters are required
  rpc AddRoleForUser (AddRoleForUserRequest) returns (AddRoleForUserResponse) {}

  // delete user org
  // all parameters are required
  // if {role_id} is *, it will delete all role about the user
  rpc DelRoleForUser (DelRoleForUserRequest) returns (DelRoleForUserResponse) {}

  // get user all roles
  // {org_id} and {user_id} are required
  rpc GetRolesForUser (GetRolesForUserRequest) returns (GetRolesForUserResponse) {}

  // get users from a {role_id}
  // if {role_id} is null, you will get all users of the {org_id}
  rpc GetUsersForRole (GetUsersForRoleRequest) returns (GetUsersForRoleResponse) {}
}

message AddRoleForUserRequest {
  string org_id = 1;
  string user_id = 2;
  string role_id = 3;
}

message AddRoleForUserResponse{
  bool ok = 1;
}

message DelRoleForUserRequest{
  string org_id = 1;
  string user_id = 2;
  string role_id = 3;
}

message DelRoleForUserResponse{
  bool ok = 1;
}

message GetRolesForUserRequest{
  string org_id = 1;
  string user_id = 2;
}

message GetUsersForRoleRequest{
  string org_id = 1;
  string role_id = 2;
}

message CreateRoleRequest {
  Role role = 1;
}

message Role{
  // role id
  int32 id = 1;

  // role name, e.g. "admin or 123456"
  string name = 2;

  // role status
  string status = 3;

  // org id,
  string org_id = 4;

  // role display name, e.g. "administrators"
  string display_name = 6;
}

message CreateRoleResponse{
  Role role = 1;
}

message DeleteRoleRequest {
  int32 id = 1;
  string name = 2;
  string org_id = 4;
}

message DeleteRoleResponse{
}

message UpdateRoleRequest {
  Role role = 1;
}

message UpdateRoleResponse {
  Role role = 1;
}

message GetRoleRequest {
  int32 id = 1;
}

message GetRoleResponse {
  Role role = 1;
}

message ListRolesRequest {
  string org_id = 1;
}

message ListRolesResponse {
  repeated Role roles = 1;
}

message UserRoleRequest {
  string org_id = 1;
  string user_id = 2;
  string role_id = 3;
}

message GetUsersForRoleResponse {
  repeated string users = 1;
}

message GetRolesForUserResponse {
  repeated string roles = 1;
}

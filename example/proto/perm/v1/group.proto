syntax = "proto3";

package perm.v1;

option go_package = "./permpb;permpb";

// group grpc service, group is a tree managed by casbin
service GroupService {
  // create group node, if parent is null, parent is root node
  // each resource has a root under each org
  // root node => group/{res_type}/org/org_{org_id}
  rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse) {}

  // delete group node, if parent is null, parent is root node
  rpc DeleteGroup (DeleteGroupRequest) returns (DeleteGroupResponse) {}

  // move group node, if to_group is null, to_group is root node
  rpc MoveGroup (MoveGroupRequest) returns (MoveGroupResponse) {}

  // list group tree
  // The returned result is a tree structure
  // {org_id} and {res_type} are a required
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {}

  // add resource to group node, if parent is null, parent is root node
  rpc AddResForGroup (AddResForGroupRequest) returns (AddResForGroupResponse) {}

  // delete resource from group node, if parent is null, parent is root node
  rpc DelResForGroup (DelResForGroupRequest) returns (DelResForGroupResponse) {}
}

message CreateGroupRequest {
  string org_id = 1;
  string res_type = 2;

  string group_type = 3;
  string group_id = 4;

  string parent_group_type = 5;
  string parent_group_id = 6;

  repeated string children = 7;
}

message CreateGroupResponse {
}

message DeleteGroupRequest {
  string org_id = 1;
  string res_type = 2;

  string group_type = 3;
  string group_id = 4;

  string parent_group_type = 5;
  string parent_group_id = 6;
}

message DeleteGroupResponse {
}

message ListGroupsRequest {
  string org_id = 1;
  string res_type = 2;
}

message ListGroupsResponse {
  repeated Group groups = 1;
}

message DelResForGroupRequest {
  string org_id = 1;
  string res_type = 2;
  string group_type = 3;
  string group_id = 4;
  string res_id = 5;
}

message DelResForGroupResponse {
}

message AddResForGroupRequest {
  string org_id = 1;
  string res_type = 2;
  string group_type = 3;
  string group_id = 4;
  string res_id = 5;
}

message AddResForGroupResponse {
}

message MoveGroupRequest {
  string org_id = 1;
  string res_type = 2;
  string from_group_type = 3;
  string from_group_id = 4;
  string cur_group_type = 5;
  string cur_group_id = 6;
  string to_group_type = 7;
  string to_group_id = 8;
}

message MoveGroupResponse {
}

message Group {
  string res_type = 1;
  string group_type = 2;
  string group_id = 3;
  repeated string resources = 4;
  repeated Group children = 5;
}

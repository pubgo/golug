// Code generated by protoc-gen-lug. DO NOT EDIT.
// source: example/proto/hello/example.proto

package hello

import (
	"reflect"
	"strings"

	"github.com/pubgo/lug/plugins/grpcc"
	"github.com/pubgo/lug/xgen"
	"github.com/pubgo/xerror"
	"google.golang.org/grpc"
)

var _ = strings.Trim

func GetUserServiceClient(srv string, optFns ...func(service string) []grpc.DialOption) func() (UserServiceClient, error) {
	client := grpcc.GetClient(srv, optFns...)
	return func() (UserServiceClient, error) {
		c, err := client.Get()
		return &userServiceClient{c}, xerror.WrapF(err, "srv: %s", srv)
	}
}

func init() {
	var mthList []xgen.GrpcRestHandler

	mthList = append(mthList, xgen.GrpcRestHandler{
		Service:      "hello.UserService",
		Name:         "AddUser",
		Method:       "POST",
		Path:         "/api/v1/users",
		ClientStream: "False" == "True",
		ServerStream: "False" == "True",
	})

	mthList = append(mthList, xgen.GrpcRestHandler{
		Service:      "hello.UserService",
		Name:         "ListUsers",
		Method:       "GET",
		Path:         "/api/v1/users",
		ClientStream: "False" == "True",
		ServerStream: "True" == "True",
	})

	mthList = append(mthList, xgen.GrpcRestHandler{
		Service:      "hello.UserService",
		Name:         "ListUsersByRole",
		Method:       "GET",
		Path:         "/api/v1/users/role",
		ClientStream: "True" == "True",
		ServerStream: "True" == "True",
	})

	xgen.Add(reflect.ValueOf(RegisterUserServiceServer), mthList)
	xgen.Add(reflect.ValueOf(RegisterUserServiceHandler), nil)
}

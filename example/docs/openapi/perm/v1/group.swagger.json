{
  "swagger": "2.0",
  "info": {
    "title": "perm/v1/group.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "perm.v1.GroupService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/perm.v1.GroupService/AddResForGroup": {
      "post": {
        "summary": "add resource to group node, if parent is null, parent is root node",
        "operationId": "GroupService_AddResForGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AddResForGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddResForGroupRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    },
    "/perm.v1.GroupService/CreateGroup": {
      "post": {
        "summary": "create group node, if parent is null, parent is root node\neach resource has a root under each org\nroot node =\u003e group/{res_type}/org/org_{org_id}",
        "operationId": "GroupService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    },
    "/perm.v1.GroupService/DelResForGroup": {
      "post": {
        "summary": "delete resource from group node, if parent is null, parent is root node",
        "operationId": "GroupService_DelResForGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DelResForGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DelResForGroupRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    },
    "/perm.v1.GroupService/DeleteGroup": {
      "post": {
        "summary": "delete group node, if parent is null, parent is root node",
        "operationId": "GroupService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteGroupRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    },
    "/perm.v1.GroupService/ListGroups": {
      "post": {
        "summary": "list group tree\nThe returned result is a tree structure\n{org_id} and {res_type} are a required",
        "operationId": "GroupService_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListGroupsRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    },
    "/perm.v1.GroupService/MoveGroup": {
      "post": {
        "summary": "move group node, if to_group is null, to_group is root node",
        "operationId": "GroupService_MoveGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MoveGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveGroupRequest"
            }
          }
        ],
        "tags": [
          "perm.v1.GroupService"
        ]
      }
    }
  },
  "definitions": {
    "AddResForGroupRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        },
        "groupType": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "resId": {
          "type": "string"
        }
      }
    },
    "AddResForGroupResponse": {
      "type": "object"
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CreateGroupRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        },
        "groupType": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "parentGroupType": {
          "type": "string"
        },
        "parentGroupId": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateGroupResponse": {
      "type": "object"
    },
    "DelResForGroupRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        },
        "groupType": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "resId": {
          "type": "string"
        }
      }
    },
    "DelResForGroupResponse": {
      "type": "object"
    },
    "DeleteGroupRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        },
        "groupType": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "parentGroupType": {
          "type": "string"
        },
        "parentGroupId": {
          "type": "string"
        }
      }
    },
    "DeleteGroupResponse": {
      "type": "object"
    },
    "ListGroupsRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        }
      }
    },
    "ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Group"
          }
        }
      }
    },
    "MoveGroupRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "resType": {
          "type": "string"
        },
        "fromGroupType": {
          "type": "string"
        },
        "fromGroupId": {
          "type": "string"
        },
        "curGroupType": {
          "type": "string"
        },
        "curGroupId": {
          "type": "string"
        },
        "toGroupType": {
          "type": "string"
        },
        "toGroupId": {
          "type": "string"
        }
      }
    },
    "MoveGroupResponse": {
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "v1.Group": {
      "type": "object",
      "properties": {
        "resType": {
          "type": "string"
        },
        "groupType": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Group"
          }
        }
      }
    }
  }
}

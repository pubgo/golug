// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: example/sqlx/code.proto

package sqlxpb

import (
	_ "github.com/pubgo/protobuild/retag"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// Types that are assignable to OneOf:
	//	*SendCodeRequest_A
	OneOf isSendCodeRequest_OneOf `protobuf_oneof:"one_of"`
	// 电话
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// 发送类型,call ,sms
	SendType string `protobuf:"bytes,3,opt,name=sendType,proto3" json:"sendType,omitempty"`
	// ip
	Ip string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *SendCodeRequest) Reset() {
	*x = SendCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeRequest) ProtoMessage() {}

func (x *SendCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeRequest.ProtoReflect.Descriptor instead.
func (*SendCodeRequest) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{0}
}

func (x *SendCodeRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (m *SendCodeRequest) GetOneOf() isSendCodeRequest_OneOf {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (x *SendCodeRequest) GetA() string {
	if x, ok := x.GetOneOf().(*SendCodeRequest_A); ok {
		return x.A
	}
	return ""
}

func (x *SendCodeRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *SendCodeRequest) GetSendType() string {
	if x != nil {
		return x.SendType
	}
	return ""
}

func (x *SendCodeRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type isSendCodeRequest_OneOf interface {
	isSendCodeRequest_OneOf()
}

type SendCodeRequest_A struct {
	A string `protobuf:"bytes,5,opt,name=a,proto3,oneof"`
}

func (*SendCodeRequest_A) isSendCodeRequest_OneOf() {}

type SendCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	// @gotags: valid:"ip" custom_tag:"custom_value"
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendCodeResponse) Reset() {
	*x = SendCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeResponse) ProtoMessage() {}

func (x *SendCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeResponse.ProtoReflect.Descriptor instead.
func (*SendCodeResponse) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{1}
}

func (x *SendCodeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendCodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SendCodeResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *SendCodeResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// 模板
	Template string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *VerifyRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *VerifyRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyRequest) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VerifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VerifyResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *VerifyResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type IsCheckImageCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// 场景
	Scene string `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"`
}

func (x *IsCheckImageCodeRequest) Reset() {
	*x = IsCheckImageCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCheckImageCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCheckImageCodeRequest) ProtoMessage() {}

func (x *IsCheckImageCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCheckImageCodeRequest.ProtoReflect.Descriptor instead.
func (*IsCheckImageCodeRequest) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{4}
}

func (x *IsCheckImageCodeRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *IsCheckImageCodeRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *IsCheckImageCodeRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

type IsCheckImageCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data bool `protobuf:"varint,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IsCheckImageCodeResponse) Reset() {
	*x = IsCheckImageCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCheckImageCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCheckImageCodeResponse) ProtoMessage() {}

func (x *IsCheckImageCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCheckImageCodeResponse.ProtoReflect.Descriptor instead.
func (*IsCheckImageCodeResponse) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{5}
}

func (x *IsCheckImageCodeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IsCheckImageCodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *IsCheckImageCodeResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *IsCheckImageCodeResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type VerifyImageCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// 图形验证码ticket
	Ticket string `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	// 图形验证码randStr
	RandStr string `protobuf:"bytes,4,opt,name=randStr,proto3" json:"randStr,omitempty"`
	// 图形验证码ip
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	// 场景
	Scene string `protobuf:"bytes,6,opt,name=scene,proto3" json:"scene,omitempty"`
}

func (x *VerifyImageCodeRequest) Reset() {
	*x = VerifyImageCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyImageCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyImageCodeRequest) ProtoMessage() {}

func (x *VerifyImageCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyImageCodeRequest.ProtoReflect.Descriptor instead.
func (*VerifyImageCodeRequest) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyImageCodeRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *VerifyImageCodeRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *VerifyImageCodeRequest) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *VerifyImageCodeRequest) GetRandStr() string {
	if x != nil {
		return x.RandStr
	}
	return ""
}

func (x *VerifyImageCodeRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VerifyImageCodeRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

type VerifyImageCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
}

func (x *VerifyImageCodeResponse) Reset() {
	*x = VerifyImageCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyImageCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyImageCodeResponse) ProtoMessage() {}

func (x *VerifyImageCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyImageCodeResponse.ProtoReflect.Descriptor instead.
func (*VerifyImageCodeResponse) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyImageCodeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VerifyImageCodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VerifyImageCodeResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

type GetSendStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区号
	NationCode string `protobuf:"bytes,1,opt,name=nationCode,proto3" json:"nationCode,omitempty"`
	// 手机号
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	// 发送类型
	SendType string `protobuf:"bytes,3,opt,name=sendType,proto3" json:"sendType,omitempty"`
	// 模板
	Template string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	// 是否越狱标示
	SignR int64 `protobuf:"varint,5,opt,name=signR,proto3" json:"signR,omitempty"`
	// ip
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GetSendStatusRequest) Reset() {
	*x = GetSendStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendStatusRequest) ProtoMessage() {}

func (x *GetSendStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSendStatusRequest) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{8}
}

func (x *GetSendStatusRequest) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *GetSendStatusRequest) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *GetSendStatusRequest) GetSendType() string {
	if x != nil {
		return x.SendType
	}
	return ""
}

func (x *GetSendStatusRequest) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *GetSendStatusRequest) GetSignR() int64 {
	if x != nil {
		return x.SignR
	}
	return 0
}

func (x *GetSendStatusRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetSendStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 时间戳
	NowTime int64 `protobuf:"varint,3,opt,name=nowTime,proto3" json:"nowTime,omitempty"`
	// 数据
	Data *SendStatus `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSendStatusResponse) Reset() {
	*x = GetSendStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendStatusResponse) ProtoMessage() {}

func (x *GetSendStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSendStatusResponse) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{9}
}

func (x *GetSendStatusResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSendStatusResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSendStatusResponse) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *GetSendStatusResponse) GetData() *SendStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要图形验证码
	NeedImageCode bool `protobuf:"varint,1,opt,name=needImageCode,proto3" json:"needImageCode,omitempty"`
	// 强制语音
	ForceCall bool `protobuf:"varint,2,opt,name=forceCall,proto3" json:"forceCall,omitempty"`
	// 被禁止
	IsForbidden bool `protobuf:"varint,3,opt,name=isForbidden,proto3" json:"isForbidden,omitempty"`
	// 数量超限制
	NumberLimit bool `protobuf:"varint,4,opt,name=numberLimit,proto3" json:"numberLimit,omitempty"`
}

func (x *SendStatus) Reset() {
	*x = SendStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_sqlx_code_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStatus) ProtoMessage() {}

func (x *SendStatus) ProtoReflect() protoreflect.Message {
	mi := &file_example_sqlx_code_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStatus.ProtoReflect.Descriptor instead.
func (*SendStatus) Descriptor() ([]byte, []int) {
	return file_example_sqlx_code_proto_rawDescGZIP(), []int{10}
}

func (x *SendStatus) GetNeedImageCode() bool {
	if x != nil {
		return x.NeedImageCode
	}
	return false
}

func (x *SendStatus) GetForceCall() bool {
	if x != nil {
		return x.ForceCall
	}
	return false
}

func (x *SendStatus) GetIsForbidden() bool {
	if x != nil {
		return x.IsForbidden
	}
	return false
}

func (x *SendStatus) GetNumberLimit() bool {
	if x != nil {
		return x.NumberLimit
	}
	return false
}

var File_example_sqlx_code_proto protoreflect.FileDescriptor

var file_example_sqlx_code_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x73, 0x71, 0x6c, 0x78, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x72, 0x65, 0x74, 0x61, 0x67, 0x2f, 0x72, 0x65,
	0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x26, 0x82, 0xea, 0x30, 0x0e, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x05,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x82, 0xea, 0x30, 0x10, 0x0a, 0x06, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x31, 0x12, 0x06, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x31, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x01, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0x82, 0xea, 0x30, 0x0d, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x05, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x01, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x42, 0x1b, 0x0a, 0x06, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x12, 0x11, 0x82, 0xea,
	0x30, 0x0d, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22,
	0xca, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71,
	0x6c, 0x78, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x0d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x17, 0x49, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x22, 0x6e, 0x0a, 0x18, 0x49, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x22, 0x59, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xb2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x69, 0x67, 0x6e, 0x52, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01,
	0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x32, 0xfa, 0x04, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x6c, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x06, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x71, 0x6c, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a,
	0x12, 0x8e, 0x01, 0x0a, 0x10, 0x49, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x49, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x49, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x69, 0x73, 0x2d, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x2d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2d,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x71, 0x6c, 0x78, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x71, 0x6c, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x67,
	0x65, 0x74, 0x2d, 0x73, 0x65, 0x6e, 0x64, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01,
	0x2a, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x73, 0x71, 0x6c, 0x78, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_sqlx_code_proto_rawDescOnce sync.Once
	file_example_sqlx_code_proto_rawDescData = file_example_sqlx_code_proto_rawDesc
)

func file_example_sqlx_code_proto_rawDescGZIP() []byte {
	file_example_sqlx_code_proto_rawDescOnce.Do(func() {
		file_example_sqlx_code_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_sqlx_code_proto_rawDescData)
	})
	return file_example_sqlx_code_proto_rawDescData
}

var file_example_sqlx_code_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_example_sqlx_code_proto_goTypes = []interface{}{
	(*SendCodeRequest)(nil),          // 0: hello.v1.sqlx.SendCodeRequest
	(*SendCodeResponse)(nil),         // 1: hello.v1.sqlx.SendCodeResponse
	(*VerifyRequest)(nil),            // 2: hello.v1.sqlx.VerifyRequest
	(*VerifyResponse)(nil),           // 3: hello.v1.sqlx.VerifyResponse
	(*IsCheckImageCodeRequest)(nil),  // 4: hello.v1.sqlx.IsCheckImageCodeRequest
	(*IsCheckImageCodeResponse)(nil), // 5: hello.v1.sqlx.IsCheckImageCodeResponse
	(*VerifyImageCodeRequest)(nil),   // 6: hello.v1.sqlx.VerifyImageCodeRequest
	(*VerifyImageCodeResponse)(nil),  // 7: hello.v1.sqlx.VerifyImageCodeResponse
	(*GetSendStatusRequest)(nil),     // 8: hello.v1.sqlx.GetSendStatusRequest
	(*GetSendStatusResponse)(nil),    // 9: hello.v1.sqlx.GetSendStatusResponse
	(*SendStatus)(nil),               // 10: hello.v1.sqlx.SendStatus
	nil,                              // 11: hello.v1.sqlx.SendCodeResponse.DataEntry
	nil,                              // 12: hello.v1.sqlx.VerifyResponse.DataEntry
}
var file_example_sqlx_code_proto_depIdxs = []int32{
	11, // 0: hello.v1.sqlx.SendCodeResponse.data:type_name -> hello.v1.sqlx.SendCodeResponse.DataEntry
	12, // 1: hello.v1.sqlx.VerifyResponse.data:type_name -> hello.v1.sqlx.VerifyResponse.DataEntry
	10, // 2: hello.v1.sqlx.GetSendStatusResponse.data:type_name -> hello.v1.sqlx.SendStatus
	0,  // 3: hello.v1.sqlx.Code.SendCode:input_type -> hello.v1.sqlx.SendCodeRequest
	2,  // 4: hello.v1.sqlx.Code.Verify:input_type -> hello.v1.sqlx.VerifyRequest
	4,  // 5: hello.v1.sqlx.Code.IsCheckImageCode:input_type -> hello.v1.sqlx.IsCheckImageCodeRequest
	6,  // 6: hello.v1.sqlx.Code.VerifyImageCode:input_type -> hello.v1.sqlx.VerifyImageCodeRequest
	8,  // 7: hello.v1.sqlx.Code.GetSendStatus:input_type -> hello.v1.sqlx.GetSendStatusRequest
	1,  // 8: hello.v1.sqlx.Code.SendCode:output_type -> hello.v1.sqlx.SendCodeResponse
	3,  // 9: hello.v1.sqlx.Code.Verify:output_type -> hello.v1.sqlx.VerifyResponse
	5,  // 10: hello.v1.sqlx.Code.IsCheckImageCode:output_type -> hello.v1.sqlx.IsCheckImageCodeResponse
	7,  // 11: hello.v1.sqlx.Code.VerifyImageCode:output_type -> hello.v1.sqlx.VerifyImageCodeResponse
	9,  // 12: hello.v1.sqlx.Code.GetSendStatus:output_type -> hello.v1.sqlx.GetSendStatusResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_example_sqlx_code_proto_init() }
func file_example_sqlx_code_proto_init() {
	if File_example_sqlx_code_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_sqlx_code_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCheckImageCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCheckImageCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyImageCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyImageCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_sqlx_code_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_example_sqlx_code_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SendCodeRequest_A)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_sqlx_code_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_sqlx_code_proto_goTypes,
		DependencyIndexes: file_example_sqlx_code_proto_depIdxs,
		MessageInfos:      file_example_sqlx_code_proto_msgTypes,
	}.Build()
	File_example_sqlx_code_proto = out.File
	file_example_sqlx_code_proto_rawDesc = nil
	file_example_sqlx_code_proto_goTypes = nil
	file_example_sqlx_code_proto_depIdxs = nil
}
